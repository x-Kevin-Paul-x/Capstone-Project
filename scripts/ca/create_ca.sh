#!/usr/bin/env bash
set -euo pipefail

# create_ca.sh - Create a test PQC CA and example node certificates using pqm4-compatible keys.
# NOTE: This is a template. Replace pqm4 commands with the actual keygen/signing tools you choose.

OUTDIR="${1:-./test-ca}"
mkdir -p "$OUTDIR"

echo "Creating test CA in $OUTDIR"

MIID...PLACEHOLDER...IDAQAB
EOF
This directory contains a test CA created by scripts/ca/create_ca.sh (template).
Replace placeholder keys with actual Dilithium keys generated by pqm4 or your chosen tooling.
Files:
 - ca_key.dil      : CA private key (placeholder)
 - ca_pub.dil      : CA public key (placeholder)
 - ca_cert.pem     : CA cert in PEM-like placeholder format

Use scripts/ca/issue_node_cert.sh to issue node certificates signed by this CA (template).
EOF
CA_HELPER="$(dirname "$0")/../../tools/ca_helper/ca_helper"
if [ -x "$CA_HELPER" ]; then
	echo "Found ca_helper -> $CA_HELPER : delegating CA creation"
	"$CA_HELPER" "$OUTDIR"
	echo "Created CA artifacts via ca_helper in $OUTDIR"
	exit 0
fi

# Fallback placeholder behavior when ca_helper is not available
CA_KEY="$OUTDIR/ca_key.dil"
CA_PUB="$OUTDIR/ca_pub.dil"
CA_CERT="$OUTDIR/ca_cert.pem"

echo "(placeholder) CA private key -> $CA_KEY"
printf "CA_PRIVATE_KEY_PLACEHOLDER\n" > "$CA_KEY"

echo "(placeholder) CA public key -> $CA_PUB"
printf "CA_PUBLIC_KEY_PLACEHOLDER\n" > "$CA_PUB"

cat > "$CA_CERT" <<'EOF'
-----BEGIN CERTIFICATE-----
MIID...PLACEHOLDER...IDAQAB
-----END CERTIFICATE-----
EOF

cat > "$OUTDIR/README.txt" <<EOF
This directory contains a test CA created by scripts/ca/create_ca.sh (template).
Replace placeholder keys with actual Dilithium keys generated by pqm4 or your chosen tooling.
Files:
 - ca_key.dil      : CA private key (placeholder)
 - ca_pub.dil      : CA public key (placeholder)
 - ca_cert.pem     : CA cert in PEM-like placeholder format

Use scripts/ca/issue_node_cert.sh to issue node certificates signed by this CA (template).
EOF

echo "Created placeholder CA at $OUTDIR"
